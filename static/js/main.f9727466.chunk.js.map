{"version":3,"sources":["components/header/Header.tsx","components/project/Project.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","react_default","a","createElement","id","className","href","target","Project","props","confetti","src","alt","App","_useState","useState","_useState2","Object","slicedToArray","setConfetti","_useWindowSize","useWindowSize","width","height","onClick","prev","react_confetti_min_default","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"gQAGe,SAASA,IAGtB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,UACJH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cAAY,uBAE9BJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,kBACVJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,0BAA0BC,OAAO,UAAQ,SACrDN,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,wBAAwBC,OAAO,UAAQ,aACnDN,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,0BAA0BC,OAAO,UAAQ,UACrDN,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,0BAA0BC,OAAO,UAAQ,YCXtD,SAASC,EAAQC,GAE9B,OACER,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAWI,EAAMC,SAAW,cAAgB,GAAIC,IAAI,yBAAyBC,IAAI,kBC6B7EC,MA7Bf,WAAe,IAAAC,EACmBC,oBAAS,GAAMC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAxCJ,EAAQM,EAAA,GAAEG,EAAWH,EAAA,GAAAI,EAEFC,MAAlBC,EAAKF,EAALE,MAAOC,EAAMH,EAANG,OAMf,OACEtB,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACH,EAAM,MACPC,EAAAC,EAAAC,cAAA,UAAQqB,QAPZ,WACEL,EAAY,SAAAM,GAAI,OAAKA,MAMe,yBAIhCf,GACAT,EAAAC,EAAAC,cAACuB,EAAAxB,EAAQ,CACToB,MAAOA,EACPC,OAAQA,IAGVtB,EAAAC,EAAAC,cAACK,EAAO,CAACE,SAAUA,MCjBViB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCHDY,IAASC,WACpBC,SAASC,eAAe,SAErBC,OACH3C,EAAAC,EAAAC,cAACF,EAAAC,EAAM2C,WAAU,KACf5C,EAAAC,EAAAC,cAAC2C,EAAG,QAORnB","file":"static/js/main.f9727466.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.css';\r\n\r\nexport default function Header() {\r\n\r\n\r\n  return (\r\n    <div id='header'>\r\n        <div>\r\n            <h1 className='page-title'>Programming Party!</h1>\r\n        </div>   \r\n        <div>\r\n            <ul className='directory-list'>\r\n                <li><a href='https://www.google.com/' target='_blank'>home</a></li>\r\n                <li><a href='https://www.bing.com/' target='_blank'>projects</a></li>\r\n                <li><a href='https://www.google.com/' target='_blank'>about</a></li>\r\n                <li><a href='https://www.google.com/' target='_blank'>join</a></li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React from 'react';\r\n\r\ninterface projectprops{\r\n    confetti : boolean\r\n}\r\nexport default function Project(props : projectprops) {\r\n\r\n  return (\r\n    <div>\r\n      <img className={props.confetti ? 'spinny-time' : ''} src=\"../../img/ski-mage.png\" alt=\"ski mage img\" />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport useWindowSize from 'react-use/lib/useWindowSize';\r\nimport Confetti from 'react-confetti';\r\n\r\nimport Header from './components/header/Header';\r\nimport Project from './components/project/Project';\r\n\r\nfunction App() {\r\n  const [confetti, setConfetti] = useState(false);\r\n\r\n  const { width, height } = useWindowSize()\r\n\r\n  function toggleConfetti(){\r\n    setConfetti(prev => !prev);\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n      <button onClick = {toggleConfetti}>\r\n        This is not a button!\r\n      </button>\r\n      {\r\n        confetti && \r\n        <Confetti\r\n        width={width}\r\n        height={height}\r\n        />\r\n      }\r\n      <Project confetti={confetti} />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(\r\n  document.getElementById('root') as HTMLElement\r\n);\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}