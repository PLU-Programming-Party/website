{"version":3,"sources":["components/header/Header.tsx","components/project/Project.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","react_default","a","createElement","id","className","href","target","Project","props","confetti","src","concat","process","alt","App","console","log","_useState","useState","_useState2","Object","slicedToArray","setConfetti","_useWindowSize","useWindowSize","width","height","onClick","prev","react_confetti_min_default","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"gQAGe,SAASA,IAGtB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,GAAG,UACJH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,cAAY,uBAE9BJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIE,UAAU,kBACVJ,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,0BAA0BC,OAAO,UAAQ,SACrDN,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,wBAAwBC,OAAO,UAAQ,aACnDN,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,0BAA0BC,OAAO,UAAQ,UACrDN,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGG,KAAK,0BAA0BC,OAAO,UAAQ,YCXtD,SAASC,EAAQC,GAE9B,OACER,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKE,UAAWI,EAAMC,SAAW,cAAgB,GAAIC,IAAG,GAAAC,OAAKC,WAAsB,qBAAqBC,IAAI,kBCgCnGC,MAhCf,WAEEC,QAAQC,IAAIJ,uDAAY,IAAAK,EAEQC,oBAAS,GAAMC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GAAxCR,EAAQU,EAAA,GAAEG,EAAWH,EAAA,GAAAI,EAEFC,MAAlBC,EAAKF,EAALE,MAAOC,EAAMH,EAANG,OAMf,OACE1B,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OACbJ,EAAAC,EAAAC,cAACH,EAAM,MACPC,EAAAC,EAAAC,cAAA,UAAQyB,QAPZ,WACEL,EAAY,SAAAM,GAAI,OAAKA,MAMe,yBAIhCnB,GACAT,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAQ,CACTwB,MAAOA,EACPC,OAAQA,IAGV1B,EAAAC,EAAAC,cAACK,EAAO,CAACE,SAAUA,MCpBVqB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCHDY,IAASC,WACpBC,SAASC,eAAe,SAErBC,OACH/C,EAAAC,EAAAC,cAACF,EAAAC,EAAM+C,WAAU,KACfhD,EAAAC,EAAAC,cAAC+C,EAAG,QAORnB","file":"static/js/main.69fee2b6.chunk.js","sourcesContent":["import React from 'react';\nimport './header.css';\n\nexport default function Header() {\n\n\n  return (\n    <div id='header'>\n        <div>\n            <h1 className='page-title'>Programming Party!</h1>\n        </div>   \n        <div>\n            <ul className='directory-list'>\n                <li><a href='https://www.google.com/' target='_blank'>home</a></li>\n                <li><a href='https://www.bing.com/' target='_blank'>projects</a></li>\n                <li><a href='https://www.google.com/' target='_blank'>about</a></li>\n                <li><a href='https://www.google.com/' target='_blank'>join</a></li>\n            </ul>\n        </div>\n    </div>\n  )\n}\n\n","import React from 'react';\n\ninterface projectprops{\n    confetti : boolean\n}\nexport default function Project(props : projectprops) {\n\n  return (\n    <div>\n      <img className={props.confetti ? 'spinny-time' : ''} src={`${process.env.PUBLIC_URL}/img/ski-mage.png`} alt=\"ski mage img\" />\n    </div>\n  )\n}\n","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport useWindowSize from 'react-use/lib/useWindowSize';\nimport Confetti from 'react-confetti';\n\nimport Header from './components/header/Header';\nimport Project from './components/project/Project';\n\nfunction App() {\n\n  console.log(process.env)\n\n  const [confetti, setConfetti] = useState(false);\n\n  const { width, height } = useWindowSize()\n\n  function toggleConfetti(){\n    setConfetti(prev => !prev);\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <button onClick = {toggleConfetti}>\n        This is not a button!\n      </button>\n      {\n        confetti && \n        <Confetti\n        width={width}\n        height={height}\n        />\n      }\n      <Project confetti={confetti} />\n    </div>\n  );\n}\n\n\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}